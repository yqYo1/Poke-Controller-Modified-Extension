name: Build and Release Nightly

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    permissions:
      contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.12', '3.13']


    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements-nuitka.txt

      - name: Build executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: SerialController/Window.py
          mode: onefile
          nuitka-version: main
          output-file: PokeConEx-py${{ matrix.python-version }}.exe
          enable-plugins: tk-inter
          clang: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Executable-py${{ matrix.python-version }}
          path: build/*.exe

  release-nightly:
    name: Create Nightly Release
    runs-on: ubuntu-latest
    needs: build-windows
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get date and short hash
        id: vars
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create or update Nightly Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: 'Nightly Build ${{ steps.vars.outputs.sha_short }} (${{ steps.vars.outputs.date }})'
          prerelease: true
          body: 'This is an automated nightly build generated by GitHub Actions. Files are attached below.'
          files: |
            artifacts/*/*.exe
